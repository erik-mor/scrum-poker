{"ast":null,"code":"var _jsxFileName = \"/home/erik/Documents/JAM/scrum-poker-king/client/src/components/SessionDetail.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport Dialog from './Dialog';\nimport { UserContext } from './UserContext';\nlet socket;\n\nconst SessionDetail = ({\n  match,\n  location\n}) => {\n  const [name, setName] = useContext(UserContext);\n  const [sessionId, setSessionId] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const id = match.params.id;\n    setSessionId(id);\n    socket = io(ENDPOINT);\n\n    if (name !== '') {\n      socket.emit('join', {\n        name,\n        id\n      });\n    }\n\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [name, ENDPOINT, match.params.id]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const saveName = data => {\n    setName(data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"id: \", sessionId), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"name: \", name, \" \"), /*#__PURE__*/React.createElement(Dialog, {\n    enterName: saveName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SessionDetail;","map":{"version":3,"sources":["/home/erik/Documents/JAM/scrum-poker-king/client/src/components/SessionDetail.js"],"names":["React","useEffect","useState","useContext","queryString","io","Dialog","UserContext","socket","SessionDetail","match","location","name","setName","sessionId","setSessionId","messages","setMessages","message","setMessage","ENDPOINT","id","params","emit","off","on","saveName","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAE3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,UAAU,CAACI,WAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AAGA,QAAMkB,QAAQ,GAAG,gBAAjB;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMoB,EAAE,GAAGX,KAAK,CAACY,MAAN,CAAaD,EAAxB;AACAN,IAAAA,YAAY,CAACM,EAAD,CAAZ;AAEAb,IAAAA,MAAM,GAAGH,EAAE,CAACe,QAAD,CAAX;;AAEA,QAAIR,IAAI,KAAK,EAAb,EAAiB;AACbJ,MAAAA,MAAM,CAACe,IAAP,CAAY,MAAZ,EAAoB;AAACX,QAAAA,IAAD;AAAOS,QAAAA;AAAP,OAApB;AACH;;AAED,WAAO,MAAM;AACTb,MAAAA,MAAM,CAACe,IAAP,CAAY,YAAZ;AACAf,MAAAA,MAAM,CAACgB,GAAP;AACH,KAHD;AAKH,GAfQ,EAeP,CAACZ,IAAD,EAAOQ,QAAP,EAAiBV,KAAK,CAACY,MAAN,CAAaD,EAA9B,CAfO,CAAT;AAiBApB,EAAAA,SAAS,CAAC,MAAM;AAEZO,IAAAA,MAAM,CAACiB,EAAP,CAAU,SAAV,EAAqBP,OAAO,IAAI;AAC5BD,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcE,OAAd,CAAD,CAAX;AACH,KAFD;AAGH,GALQ,EAKP,CAACF,QAAD,CALO,CAAT;;AAOA,QAAMU,QAAQ,GAAIC,IAAD,IAAU;AACvBd,IAAAA,OAAO,CAACc,IAAD,CAAP;AACH,GAFD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASb,SAAT,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWF,IAAX,MAFJ,eAII,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEc,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAUH,CAhDD;;AAkDA,eAAejB,aAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client'\nimport Dialog from './Dialog'\nimport {UserContext} from './UserContext'\n\nlet socket;\n\nconst SessionDetail = ({ match, location }) => {\n\n    const [name, setName] = useContext(UserContext);\n    const [sessionId, setSessionId] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n\n\n    const ENDPOINT = 'localhost:5000';\n\n    useEffect(() => {\n        const id = match.params.id;\n        setSessionId(id);\n\n        socket = io(ENDPOINT);\n\n        if (name !== '') {\n            socket.emit('join', {name, id});\n        }   \n        \n        return () => {\n            socket.emit('disconnect');\n            socket.off();\n        }    \n\n    },[name, ENDPOINT, match.params.id]);\n\n    useEffect(() => {\n\n        socket.on('message', message => {\n            setMessages([...messages, message]);\n        });\n    },[messages]);\n\n    const saveName = (data) => {\n        setName(data);\n    }\n      \n    return (\n        <div>\n            <h1>id: {sessionId}</h1>\n            <h1>name: {name} </h1>\n\n            <Dialog enterName={saveName} />\n\n        </div>\n\n    );\n}\n\nexport default SessionDetail;"]},"metadata":{},"sourceType":"module"}