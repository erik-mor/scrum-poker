{"ast":null,"code":"var _jsxFileName = \"/home/erik/Documents/JAM/scrum-poker-king/client/src/components/Dialog.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { UserContext } from './UserContext';\nexport default function Dailog(props) {\n  useEffect(() => {\n    if (userName !== '') {\n      setOpen(false);\n    }\n  });\n  const [userName, setUserName] = useContext(UserContext);\n  const [open, setOpen] = useState(true);\n  const [name, setName] = useState('');\n\n  const handleClose = () => {\n    if (name !== '') {\n      console.log(name);\n      setUserName(name);\n      setOpen(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Enter display name\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Name\",\n    type: \"text\",\n    fullWidth: true,\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Save name\"))));\n}","map":{"version":3,"sources":["/home/erik/Documents/JAM/scrum-poker-king/client/src/components/Dialog.js"],"names":["React","useEffect","useState","useContext","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","UserContext","Dailog","props","userName","setOpen","setUserName","open","name","setName","handleClose","console","log","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAElCX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,QAAQ,KAAK,EAAjB,EAAqB;AACjBC,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AAEJ,GALQ,CAAT;AAOA,QAAM,CAACD,QAAD,EAAWE,WAAX,IAA0BZ,UAAU,CAACO,WAAD,CAA1C;AACA,QAAM,CAACM,IAAD,EAAOF,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMiB,WAAW,GAAG,MAAM;AACtB,QAAIF,IAAI,KAAK,EAAb,EAAiB;AACbG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAF,MAAAA,WAAW,CAACE,IAAD,CAAX;AACAH,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AACJ,GAND;;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEE,IAAd;AAAoB,IAAA,OAAO,EAAEG,WAA7B;AAA0C,uBAAgB,mBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,MAAM,EAAC,OAFX;AAGI,IAAA,EAAE,EAAC,MAHP;AAII,IAAA,KAAK,EAAC,MAJV;AAKI,IAAA,IAAI,EAAC,MALT;AAMI,IAAA,SAAS,MANb;AAOI,IAAA,KAAK,EAAEF,IAPX;AAQI,IAAA,QAAQ,EAAEK,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAcI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEL,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAdJ,CADJ,CADJ;AAwBH","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { UserContext } from './UserContext'\n\nexport default function Dailog(props) {\n\n    useEffect(() => {\n        if (userName !== '') {\n            setOpen(false);\n        }\n\n    });\n\n    const [userName, setUserName] = useContext(UserContext);\n    const [open, setOpen] = useState(true);\n    const [name, setName] = useState('');\n\n    const handleClose = () => {\n        if (name !== '') {\n            console.log(name);\n            setUserName(name);\n            setOpen(false);\n        }\n    };\n\n    return (\n        <div>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Enter display name</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Name\"\n                        type=\"text\"\n                        fullWidth\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Save name\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}