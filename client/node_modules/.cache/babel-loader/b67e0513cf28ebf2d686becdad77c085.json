{"ast":null,"code":"var _jsxFileName = \"/home/erik/Documents/JAM/scrum-poker-king/client/src/components/UserContext.js\";\nimport React, { useState, createContext, useEffect } from 'react';\nexport const UserContext = createContext();\nexport const UserProvider = props => {\n  const [userName, setUserName] = useState('');\n  useEffect(() => {\n    let name = sessionStorage.getItem('userName');\n\n    if (name !== null) {\n      setUserName(name);\n    } else {\n      sessionStorage.setItem('userName', userName);\n    }\n  }, [userName]);\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: [userName, setUserName],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  }, \" \", props.children, \" \");\n};","map":{"version":3,"sources":["/home/erik/Documents/JAM/scrum-poker-king/client/src/components/UserContext.js"],"names":["React","useState","createContext","useEffect","UserContext","UserProvider","props","userName","setUserName","name","sessionStorage","getItem","setItem","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,OAAO,MAAMC,WAAW,GAAGF,aAAa,EAAjC;AAEP,OAAO,MAAMG,YAAY,GAAGC,KAAK,IAAI;AAEnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,IAAI,GAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX;;AACA,QAAGF,IAAI,KAAK,IAAZ,EAAkB;AAChBD,MAAAA,WAAW,CAACC,IAAD,CAAX;AACD,KAFD,MAEO;AACHC,MAAAA,cAAc,CAACE,OAAf,CAAuB,UAAvB,EAAmCL,QAAnC;AACH;AAEF,GARQ,EAQP,CAACA,QAAD,CARO,CAAT;AAUA,sBAAO,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACA,QAAD,EAAWC,WAAX,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAwDF,KAAK,CAACO,QAA9D,MAAP;AAED,CAhBM","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\n\nexport const UserContext = createContext();\n\nexport const UserProvider = props => {\n\n  const [userName, setUserName] = useState('');\n\n  useEffect(() => {\n    let name = sessionStorage.getItem('userName');\n    if(name !== null) {\n      setUserName(name);\n    } else {\n        sessionStorage.setItem('userName', userName);\n    }\n\n  },[userName]);\n\n  return <UserContext.Provider value={[userName, setUserName]}> {props.children} </UserContext.Provider>\n\n}"]},"metadata":{},"sourceType":"module"}